{"version":3,"sources":["images/pixalive.png","images/gracehopper.png","images/energyviz.png","images/Headshot.jpeg","Pixalive.js","Gracehopper.js","Energyviz.js","Projects.js","Bio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","pixalive","react_default","a","createElement","Card","fluid","color","header","href","target","Image","src","pixaliveImg","wrapped","size","ui","centered","Content","Header","Meta","className","Description","extra","Divider","hidden","Button","circular","Icon","name","gracehopper","gracehopperImg","energyviz","energyvizImg","right","Projects","id","Group","Pixalive","Gracehopper","Energyviz","Bio","headshot","List","Item","App","rel","src_Bio","src_Projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5c4d3f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pixalive.56cb6acc.png\";","module.exports = __webpack_public_path__ + \"static/media/gracehopper.5cdeb065.png\";","module.exports = __webpack_public_path__ + \"static/media/energyviz.6fa6d536.png\";","module.exports = __webpack_public_path__ + \"static/media/Headshot.b6dfcedd.jpeg\";","import React from 'react';\nimport { Card, Icon, Image, Divider, Button } from 'semantic-ui-react'\nimport pixaliveImg from './images/pixalive.png'\n\n\nfunction pixalive () {\n\n  return (\n    <Card fluid color='red' header='Pixalive' href='https://pixalive.herokuapp.com/' target='_blank'>\n      <Image src={pixaliveImg} wrapped size='small' ui={true} centered />\n      <Card.Content>\n        <Card.Header>Pixalive</Card.Header>\n        <Card.Meta>\n          <span className='date'>\n            Two week capstone group project\n              </span>\n        </Card.Meta>\n        <Card.Description>\n          A multi-user, real-time pixel art editor utilizing React Hooks, Canvas and Socket.Io game designers and artists can produce high quality and complex animations, or your colleagues and friends at the office can unleash their emoji-creating potential, making and exporting animated gifs for your slack channel.\n\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        Technical success: Using React hooks instead of Redux to learn a new technology.\n              <Divider hidden />\n        Biggest challenge: Using Canvas for the draw and render elements meant we had to learn the ins and outs of how Canvas and React interact. Using refs and diffing allowed us to render and re-render for multiple users as needed.\n              <Divider hidden />\n        Personal success: We decided to create our own color picker so the theme would match our other themed elements. Figuring out click location vs hue selected was a fun challenge I tackled solo for this project.\n              <Divider hidden />\n        Lessons learned: I think the biggest lesson learned from this project was the importance of choosing the right technology for your work. We choose React hooks to learn it, but using Redux would have been much simplier in many cases. In addition, initially we considered using Firestore as our database but quickly realized our high number of writes to the database would not allow use of that technology.\n              <Divider hidden />\n        <Button circular color='github' href='https://github.com/pixalive' target='_blank'>\n          <Icon name='github' />\n          GitHub\n        </Button>\n        <Button circular color='github' href='https://www.youtube.com/watch?v=PVSvkN2WdAw&    list=PLx0iOsdUOUmk9wbCJIHGsqBWYV29-3c0I&index=23&t=0s' target='_blank'>\n          <Icon name='youtube' />\n          Video Walk-Through\n              </Button>\n        <Button circular color='github' href='https://github.com/pixalive' target='_blank'>\n          <Icon name='world' />\n          Deployed Site\n        </Button>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default pixalive\n","import React from 'react';\nimport { Card, Icon, Image, Divider, Button } from 'semantic-ui-react'\nimport gracehopperImg from './images/gracehopper.png'\n\n\nfunction gracehopper() {\n\n  return (\n    <Card fluid color='blue' header='GraceHOPper' href='https://gracehopper-abmt.herokuapp.com/' target='_blank'>\n      <Image src={gracehopperImg} wrapped size='small' ui={true} centered />\n      <Card.Content>\n        <Card.Header>Grace HOPper</Card.Header>\n        <Card.Meta>\n          <span className='date'>\n            One and a half week group project\n              </span>\n        </Card.Meta>\n        <Card.Description>\n          An e-commerce website selling beer built using React, Redux and Postgres. Styled with Semantic UI React.\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        Technical success: This project used Semantic UI React to keep styling consistent across coders.\n              <Divider hidden />\n        Biggest challenge: The biggest challenge we faced in this project was creating a cart. We mob programmed the framework for the cart, allowing items to be added, removed and updated for a specific user.\n              <Divider hidden />\n        Personal success: I took charge of the admin functionality for this project. We used both select rendering and admin route middleware to secure admin-only actions.\n              <Divider hidden />\n        Lessons learned: We started the project with a robust project board which we kept updated. We were able to make as much progress as we did because we all knew what tasks remained and who was working on what task.\n              <Divider hidden />\n        <Button circular color='github' href='https://github.com/toddivey/Grace_Shopper_ABMT' target='_blank'>\n          <Icon name='github' />\n          GitHub\n        </Button>\n        <Button circular color='github' href='https://gracehopper-abmt.herokuapp.com/' target='_blank'>\n          <Icon name='world' />\n          Deployed Site\n        </Button>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default gracehopper\n","import React from 'react';\nimport { Card, Icon, Image, Divider, Button } from 'semantic-ui-react'\nimport energyvizImg from './images/energyviz.png'\n\n\nfunction energyviz() {\n\n  return (\n    <Card fluid color='green' header='EnergyViz' href='https://github.com/BabbleBiz/EnergyViz' target='_blank'>\n      <Image src={energyvizImg} wrapped size='small' ui={true} centered />\n      <Card.Content>\n        <Card.Header>EnergyViz</Card.Header>\n        <Card.Meta>\n          <span className='date'>\n            Four day personal hack-a-thon project\n              </span>\n        </Card.Meta>\n        <Card.Description>\n          An energy visualizer using D3 and React to show city of Chicago energy data.\n        </Card.Description>\n      </Card.Content>\n      <Card.Content right extra>\n        Technical success: Creating a pointer that re-rendered and was able to display current data point from the dataset. Can be seen on the line graph.\n              <Divider hidden />\n        Biggest challenge: The biggest challenge I faced in this project was getting React and D3 to play well together. I spent quite a while researching re-rendering with D3.\n              <Divider hidden />\n        Personal success: Doing a deep dive into a new technology. I was thrilled to get D3 rendering data I pulled from the city of Chicago.\n              <Divider hidden />\n        Lessons learned: When I started this project I was warned that D3 and React did not interact in ways that were easy to predict. I learned that it is important to find the right tool for your job before you commit to a specific technology.\n              <Divider hidden />\n        <Button circular color='github' href='https://github.com/BabbleBiz/EnergyViz' target='_blank'>\n          <Icon name='github' />\n          GitHub\n        </Button>\n      </Card.Content>\n    </Card>\n  )\n}\n\nexport default energyviz\n","import React from 'react';\nimport { Card, Icon, Image, Divider, Button } from 'semantic-ui-react'\nimport Pixalive from './Pixalive'\nimport GraceHOPper from './Gracehopper'\nimport Energyviz from './Energyviz'\n\nfunction Projects () {\n  return (\n    <div id='projectcontainer'>\n      <h2>Projects</h2>\n      <Card.Group>\n        <Pixalive />\n        <GraceHOPper />\n        <Energyviz />\n      </Card.Group>\n    </div>\n  )\n}\n\nexport default Projects\n","import React from 'react';\nimport { Card, Icon, Image, Divider, List } from 'semantic-ui-react'\nimport headshot from './images/Headshot.jpeg'\n\nfunction Bio() {\n  return (\n    <div>\n  <Card>\n        <Image src={headshot} wrapped size='small' ui={true} centered />\n        <Card.Content>\n          <Card.Header>Teaching Fellow, Fullstack Academy of Code</Card.Header>\n          <Card.Meta>\n            <span className='date'>\n            City: Chicago, IL\n            </span>\n          </Card.Meta>\n          <Card.Description>\n            I'm a coder who loves seeing people use my apps to make their lives better. Talk to me about how you use data to make your users' lives better.\n\n      </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n            Growing up outside Chicago I knew I wanted to dedicate my life to helping people. After graduating with a Masters in Public Affairs, I took on a roles in the non-profit and private consulting world to try and find where my technical skills fit with my drive to help people. We live in a world where data is all around us and I am passionate about helping people use this data to live better lives. After completing my training at Fullstack Academy of code, I look forward to writing beautiful code to unlock the potential of the data all around us.\n\n            When I'm not coding you can find me at one of the many beautiful climbing gyms in Chicago. I am also known to patrol the dog beach with my lovable mutt Tails (yes, he is named after the Sonic character).\n          <Divider hidden />\n          <List>\n            Skills:\n            <List.Item>Proficient: Javascript · Express · React/Redux · Express · Sequelize ORM · PostgreSQL· Jasmin · SQL · Asana · CRM Dynamics</List.Item>\n            <List.Item>Familiar: React Native · Webpack · Travis CI · Heroku · STATA·Mocha · Chai · OAuth · Passport · Git · Flexbox · CSS · HTML5 · Semantic UI React · Expo · D3 · FS(File System) · Socket.io · React Hooks · Firestore</List.Item>\n          </List>\n\n          <Divider hidden />\n\n            <List>\n              Education:\n              <List.Item>Grace Hopper Track - Fullstack Academy of Code</List.Item>\n              <List.Item>University of Wisconsin-Madison, La Follette School of Public Affairs (MPAff)</List.Item>\n              <List.Item>Carleton College (BA)</List.Item>\n            </List>\n\n        </Card.Content>\n      </Card>\n\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react';\nimport {Button} from 'semantic-ui-react'\nimport './App.css';\nimport Projects from './Projects'\nimport Bio from './Bio'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <p>\n          Elizabeth  'Biz'  Silverstein\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/BabbleBiz\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub: babblebiz\n        </a>\n        <a\n          className=\"App-link\"\n          href=\"https://www.linkedin.com/in/elizabethsilverstein/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          LinkedIn: elizabethsilverstein\n        </a>\n        <Button className=\"ui tiny button\">Download Biz's Resume</Button>\n      </header>\n      <div id='maincontainer'>\n        <Bio />\n        <Projects />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}